//
//  main.cpp
//  Prog_Realise_NotLinear_Structure2
//
//  Created by Данила on 05.11.2020.
//  Copyright © 2020 Данила. All rights reserved.
//

#include <iostream>

#include <queue>

#include <stdio.h>

#include <stdlib.h>
#include <mach/mach_time.h>

using namespace std;

void khoaraQuickSort(int *numbers, int left, int right)
{
  int pivot;
  int l_hold = left;
  int r_hold = right;
  pivot = numbers[left];
  while (left < right)
  {
    while ((numbers[right] >= pivot) && (left < right))
      right--;
    if (left != right)
    {
      numbers[left] = numbers[right];
      left++;
    }
    while ((numbers[left] <= pivot) && (left < right))
      left++;
    if (left != right)
    {
      numbers[right] = numbers[left];
      right--;
    }
  }
  numbers[left] = pivot;
  pivot = left;
  left = l_hold;
  right = r_hold;
  if (left < pivot)
    khoaraQuickSort(numbers, left, pivot - 1);
  if (right > pivot)
    khoaraQuickSort(numbers, pivot + 1, right);
}

int main()
{
    int t_s,t_f;
    queue<int> NumsToSort;
    
    srand(static_cast<unsigned int>(time(nullptr)));
    int ToSortNumbers[3000];
    int N = 300;
    
    for (int i = 0; i<3000; i++) {
            ToSortNumbers[i] = rand() % 999;
    }
    
    for (int i=0; i<10; i++) {
        
        for (int z= N-300; z<N; z++) {
//            khoaraQuickSort(ToSortNumbers, 0, 1000-1);
            NumsToSort.push(ToSortNumbers[z]);
        }
        t_s=mach_absolute_time();
        khoaraQuickSort(ToSortNumbers, 0, 1000-1);
        cout<<ToSortNumbers[i]<<endl;
        t_f=mach_absolute_time();
        
        cout << "Номер сортировки: " <<  i + 1 << " Колличество отсортированных элементов: " << N << " Время сортировки (ms): " << t_f - t_s << " Колличество операций (N_op): " << endl;        // Шаг в 300 элементов
        N = N + 300;
    }
    
}
